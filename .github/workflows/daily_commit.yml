name: Dynamic Daily Commit

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Grant write permissions to push changes

jobs:
  commit:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Git identity
    - name: Set up Git identity
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions Bot"

    # Step 3: Modify a file with dynamic content
    - name: Modify file with dynamic content
      run: |
        # Get the current day of the week (1-7, Monday-Sunday)
        DAY_OF_WEEK=$(date +'%u')  # 1 for Monday, 7 for Sunday

        # Skip commit on Sunday
        if [ "$DAY_OF_WEEK" -eq 7 ]; then
          echo "It's Sunday, skipping commits."
          exit 0
        fi

        # Generate base multiplier based on day of the week
        if [ "$DAY_OF_WEEK" -eq 1 ] || [ "$DAY_OF_WEEK" -eq 3 ] || [ "$DAY_OF_WEEK" -eq 5 ]; then
          BASE_MULTIPLIER=3  # Monday, Wednesday, Friday
        else
          BASE_MULTIPLIER=2  # Tuesday, Thursday, Saturday
        fi

        # Get the current date (day of the month)
        DAY_OF_MONTH=$(date +'%d')

        # Check if the day is even or odd
        if [ $((DAY_OF_MONTH % 2)) -eq 0 ]; then
          # Even day -> multiply by 3
          NUM_COMMITS=$((BASE_MULTIPLIER * 3))
        else
          # Odd day -> multiply by 4
          NUM_COMMITS=$((BASE_MULTIPLIER * 4))
        fi

        # Loop to make multiple commits
        for i in $(seq 1 $NUM_COMMITS); do
          RANDOM_NUMBER=$((RANDOM % 1000))
          TIMESTAMP=$(TZ="America/New_York" date +"%Y-%m-%d %H:%M:%S %Z")
          COMMIT_MESSAGE="Commit $i made at $TIMESTAMP with random number: $RANDOM_NUMBER"
          echo "$COMMIT_MESSAGE" > auto_commit_log.txt
          git add auto_commit_log.txt
          git commit -m "$COMMIT_MESSAGE"
        done

    # Step 4: Push changes
    - name: Push changes
      run: |
        git push
